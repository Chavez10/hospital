package sv.edu.usam.www.entities;
// Generated 09-dic-2020 23:14:23 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Citas generated by hbm2java
 */
@Entity
@Table(name="citas"
    ,catalog="hospitalbd"
)
public class Citas  implements java.io.Serializable {


     private Integer idCita;
     private DatosPacientes datosPacientes;
     private Registros registros;
     private String diagnostico;
     private Date fechaCita;
     private Set<RecetasPacientes> recetasPacienteses = new HashSet<RecetasPacientes>(0);
     private Set<ExamenesPacientes> examenesPacienteses = new HashSet<ExamenesPacientes>(0);

    public Citas() {
    }

	
    public Citas(DatosPacientes datosPacientes, Registros registros, String diagnostico, Date fechaCita) {
        this.datosPacientes = datosPacientes;
        this.registros = registros;
        this.diagnostico = diagnostico;
        this.fechaCita = fechaCita;
    }
    public Citas(DatosPacientes datosPacientes, Registros registros, String diagnostico, Date fechaCita, Set<RecetasPacientes> recetasPacienteses, Set<ExamenesPacientes> examenesPacienteses) {
       this.datosPacientes = datosPacientes;
       this.registros = registros;
       this.diagnostico = diagnostico;
       this.fechaCita = fechaCita;
       this.recetasPacienteses = recetasPacienteses;
       this.examenesPacienteses = examenesPacienteses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id_cita", unique=true, nullable=false)
    public Integer getIdCita() {
        return this.idCita;
    }
    
    public void setIdCita(Integer idCita) {
        this.idCita = idCita;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="id_paciente", nullable=false)
    public DatosPacientes getDatosPacientes() {
        return this.datosPacientes;
    }
    
    public void setDatosPacientes(DatosPacientes datosPacientes) {
        this.datosPacientes = datosPacientes;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="doctor", nullable=false)
    public Registros getRegistros() {
        return this.registros;
    }
    
    public void setRegistros(Registros registros) {
        this.registros = registros;
    }

    
    @Column(name="diagnostico", nullable=false, length=65535)
    public String getDiagnostico() {
        return this.diagnostico;
    }
    
    public void setDiagnostico(String diagnostico) {
        this.diagnostico = diagnostico;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="fecha_cita", nullable=false, length=19)
    public Date getFechaCita() {
        return this.fechaCita;
    }
    
    public void setFechaCita(Date fechaCita) {
        this.fechaCita = fechaCita;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="citas")
    public Set<RecetasPacientes> getRecetasPacienteses() {
        return this.recetasPacienteses;
    }
    
    public void setRecetasPacienteses(Set<RecetasPacientes> recetasPacienteses) {
        this.recetasPacienteses = recetasPacienteses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="citas")
    public Set<ExamenesPacientes> getExamenesPacienteses() {
        return this.examenesPacienteses;
    }
    
    public void setExamenesPacienteses(Set<ExamenesPacientes> examenesPacienteses) {
        this.examenesPacienteses = examenesPacienteses;
    }




}


